local Players   = game:GetService("Players")
local player    = Players.LocalPlayer
local char      = player.Character or player.CharacterAdded:Wait()
local hrp       = char:WaitForChild("HumanoidRootPart")
local humanoid  = char:WaitForChild("Humanoid")

local remote    = char:WaitForChild("Steel Pickaxe"):WaitForChild("Events"):WaitForChild("Damage")
local sellCFrame = CFrame.new(0, 10, 0)

local damaged = false
humanoid.HealthChanged:Connect(function(h)
    if h < humanoid.MaxHealth then
        damaged = true
    end
end)

local function getIronParts()
    local list = {}
    for _, part in ipairs(workspace:GetDescendants()) do
        if part:IsA("BasePart") and part.Name == "Iron" then
            table.insert(list, part)
        end
    end
    return list
end

local function activatePrompt(part)
    for _, obj in ipairs(part:GetDescendants()) do
        if obj:IsA("ProximityPrompt") then
            obj:InputHoldBegin()
            wait(0.1)
            obj:InputHoldEnd()
            return true
        end
    end
    return false
end

local function droppedNearby(names)
    local nearby = {}
    local drops = workspace:FindFirstChild("DroppedMaterials")
    if not drops then return nearby end

    for _, drop in ipairs(drops:GetChildren()) do
        if table.find(names, drop.Name) and (drop.Position - hrp.Position).Magnitude < 12 then
            nearby[drop.Name] = drop
        end
    end

    return nearby
end

local function mineNode(node)
    for i = 1, 3 do
        if damaged then
            hrp.CFrame = sellCFrame
            return true
        end

        -- Move to node
        hrp.CFrame = node.CFrame + Vector3.new(0, 3, 0)
        wait(0.2)

        -- Swing
        local args = {
            workspace:WaitForChild("Iron"):WaitForChild("Iron"):WaitForChild("Rock")
        }
        remote:FireServer(unpack(args))
        wait(0.4)

        -- Check if both Iron and Rock dropped
        local nearby = droppedNearby({"Iron", "Rock"})
        if nearby["Iron"] and nearby["Rock"] then
            print("Iron + Rock detected nearby. Stopping swings early.")
            break
        end
    end

    -- Pick up dropped materials
    local materials = droppedNearby({"Iron", "Rock"})
    for _, drop in pairs(materials) do
        hrp.CFrame = drop.CFrame + Vector3.new(0, 3, 0)
        wait(0.2)
        activatePrompt(drop)
        wait(0.3)
    end

    return false
end

local function main()
    for _, node in ipairs(getIronParts()) do
        if mineNode(node) then break end
    end
    hrp.CFrame = sellCFrame
    print("Mining done â€” teleported to sell.")
end

main()
